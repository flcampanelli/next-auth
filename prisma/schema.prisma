generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @id @default(cuid())
  name           String?
  email          String         @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  accounts       Account[]
  events         Event[]
  eventUsers     EventUser[]
  Organization   Organization[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Organization {
  id           String   @id @default(cuid())
  name         String
  logo         String?
  address      Json?
  contactEmail String
  socialLinks  Json?
  userId       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  events       Event[]
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Event {
  id             String       @id @default(cuid())
  title          String
  date           DateTime
  description    String?
  banner         String?
  price          Decimal
  userId         String
  organizationId String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  organization   Organization @relation(fields: [organizationId], references: [id])
  user           User         @relation(fields: [userId], references: [id])
  eventUsers     EventUser[]

  @@index([userId])
}

model EventUser {
  eventId   String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  event     Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([eventId, userId])
}
